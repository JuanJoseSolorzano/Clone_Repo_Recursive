name: CI & Release Workflow # Name identification for the workflow
# Triggers the workflow on specific events
on: 
  push: # when pushing the master branch or pushing a tag
    branches:
      - master
    tags:
      - 'v*'  # Triggers release when pushing versioned tags (e.g., v1.0.0)
  pull_request: # when a pull request is opened or updated.
    branches:
      - master
# Permissions for the workflow
permissions:
  contents: write  # Needed for GitHub Releases
  id-token: write

# Job to build the VS Code extension
jobs:
  build:
    runs-on: ubuntu-latest # Tells GitHub to run the job on the latest VM image available for Ubuntu.
    steps: # Steps to be executed in the job
      - name: Checkout repository # clone the repository to the GitHub workspace
        uses: actions/checkout@v3
    # From here, the following steps are executed to install dependencies, build the extension, and package it into a .vsix file.
    # Same steps that you would do locally to build the extension.
      - name: Setup Node.js # NodeJs environment 
        uses: actions/setup-node@v3 
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci  # `npm ci` is more reliable for CI environments as it installs dependencies based on the package-lock.json

      - name: Install ts-loader
        run: npm install ts-loader --save-dev  # Ensure ts-loader is installed

      - name: Install global tools
        run: |
          npm install -g yo generator-code
          npm install -g @vscode/vsce
          npm install -g webpack webpack-cli

      - name: Build and Package
        run: vsce package --cwd /home/runner/work/Clone_Repo_Recursive/Clone_Repo_Recursive
       
      - name: Upload VSIX Artifact
        uses: actions/upload-artifact@v4
        with:
          name: vsix-artifact
          path: '/home/runner/work/Clone_Repo_Recursive/Clone_Repo_Recursive/git-clone-with-submodules-1.3.8.vsix'

      - name: Checking the GITHUB_WORKSPACE directory
        run: |
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          ls -l $GITHUB_WORKSPACE  # List files in the workspace to verify the .vsix file is present

  release:
    runs-on: ubuntu-latest
    needs: build
    # if: startsWith(github.ref_name, 'v')  # Only run for tag-based releases
    steps:
      - name: Download VSIX Artifact
        uses: actions/download-artifact@v4
        with:
          name: vsix-artifact

      - name: Publish to VS Code Marketplace
        run: vsce publish --pat ${{ secrets.VSCE_TOKEN }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.VSCE_TOKEN }}
        continue-on-error: true

      #- name: Upload VSIX to GitHub Release
      #  uses: softprops/action-gh-release@v1
      #  with:
      #    files: "/home/runner/work/Clone_Repo_Recursive/Clone_Repo_Recursive/git-clone-with-submodules-1.3.8.vsix"  # Adjust the path if the .vsix is located elsewhere
      #    body: "ðŸš€ New release of the VS Code extension!"
      #    draft: false
      #    prerelease: false
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}